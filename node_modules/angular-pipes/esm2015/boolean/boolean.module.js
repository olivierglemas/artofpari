import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { IsGreaterPipe, IsGreaterOrEqualPipe, IsLessPipe, IsLessOrEqualPipe, IsEqualPipe, IsNotEqualPipe, IsIdenticalPipe, IsNotIdenticalPipe, } from './conditions.pipe';
import { IsNullPipe, IsNilPipe, IsUndefinedPipe, IsFunctionPipe, IsNumberPipe, IsStringPipe, IsArrayPipe, IsObjectPipe, IsDefinedPipe } from './types.pipe';
let NgBooleanPipesModule = class NgBooleanPipesModule {
};
NgBooleanPipesModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            IsGreaterPipe,
            IsGreaterOrEqualPipe,
            IsLessPipe,
            IsLessOrEqualPipe,
            IsEqualPipe,
            IsNotEqualPipe,
            IsIdenticalPipe,
            IsNotIdenticalPipe,
            IsNilPipe,
            IsNullPipe,
            IsUndefinedPipe,
            IsFunctionPipe,
            IsNumberPipe,
            IsStringPipe,
            IsArrayPipe,
            IsObjectPipe,
            IsDefinedPipe
        ],
        exports: [
            IsGreaterPipe,
            IsGreaterOrEqualPipe,
            IsLessPipe,
            IsLessOrEqualPipe,
            IsEqualPipe,
            IsNotEqualPipe,
            IsIdenticalPipe,
            IsNotIdenticalPipe,
            IsNilPipe,
            IsNullPipe,
            IsUndefinedPipe,
            IsFunctionPipe,
            IsNumberPipe,
            IsStringPipe,
            IsArrayPipe,
            IsObjectPipe,
            IsDefinedPipe
        ]
    })
], NgBooleanPipesModule);
export { NgBooleanPipesModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vbGVhbi5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXBpcGVzLyIsInNvdXJjZXMiOlsiYm9vbGVhbi9ib29sZWFuLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQ0gsYUFBYSxFQUNiLG9CQUFvQixFQUNwQixVQUFVLEVBQ1YsaUJBQWlCLEVBQ2pCLFdBQVcsRUFDWCxjQUFjLEVBQ2QsZUFBZSxFQUNmLGtCQUFrQixHQUNyQixNQUFNLG1CQUFtQixDQUFDO0FBRTNCLE9BQU8sRUFDSCxVQUFVLEVBQ1YsU0FBUyxFQUNULGVBQWUsRUFDZixjQUFjLEVBQ2QsWUFBWSxFQUNaLFlBQVksRUFDWixXQUFXLEVBQ1gsWUFBWSxFQUNaLGFBQWEsRUFDaEIsTUFBTSxjQUFjLENBQUM7QUEwQ3RCLElBQWEsb0JBQW9CLEdBQWpDLE1BQWEsb0JBQW9CO0NBQUcsQ0FBQTtBQUF2QixvQkFBb0I7SUF4Q2hDLFFBQVEsQ0FBQztRQUNOLFlBQVksRUFBRTtZQUNWLGFBQWE7WUFDYixvQkFBb0I7WUFDcEIsVUFBVTtZQUNWLGlCQUFpQjtZQUNqQixXQUFXO1lBQ1gsY0FBYztZQUNkLGVBQWU7WUFDZixrQkFBa0I7WUFDbEIsU0FBUztZQUNULFVBQVU7WUFDVixlQUFlO1lBQ2YsY0FBYztZQUNkLFlBQVk7WUFDWixZQUFZO1lBQ1osV0FBVztZQUNYLFlBQVk7WUFDWixhQUFhO1NBQ2hCO1FBQ0QsT0FBTyxFQUFFO1lBQ0wsYUFBYTtZQUNiLG9CQUFvQjtZQUNwQixVQUFVO1lBQ1YsaUJBQWlCO1lBQ2pCLFdBQVc7WUFDWCxjQUFjO1lBQ2QsZUFBZTtZQUNmLGtCQUFrQjtZQUNsQixTQUFTO1lBQ1QsVUFBVTtZQUNWLGVBQWU7WUFDZixjQUFjO1lBQ2QsWUFBWTtZQUNaLFlBQVk7WUFDWixXQUFXO1lBQ1gsWUFBWTtZQUNaLGFBQWE7U0FDaEI7S0FDSixDQUFDO0dBQ1csb0JBQW9CLENBQUc7U0FBdkIsb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7XHJcbiAgICBJc0dyZWF0ZXJQaXBlLFxyXG4gICAgSXNHcmVhdGVyT3JFcXVhbFBpcGUsXHJcbiAgICBJc0xlc3NQaXBlLFxyXG4gICAgSXNMZXNzT3JFcXVhbFBpcGUsXHJcbiAgICBJc0VxdWFsUGlwZSxcclxuICAgIElzTm90RXF1YWxQaXBlLFxyXG4gICAgSXNJZGVudGljYWxQaXBlLFxyXG4gICAgSXNOb3RJZGVudGljYWxQaXBlLFxyXG59IGZyb20gJy4vY29uZGl0aW9ucy5waXBlJztcclxuXHJcbmltcG9ydCB7XHJcbiAgICBJc051bGxQaXBlLFxyXG4gICAgSXNOaWxQaXBlLFxyXG4gICAgSXNVbmRlZmluZWRQaXBlLFxyXG4gICAgSXNGdW5jdGlvblBpcGUsXHJcbiAgICBJc051bWJlclBpcGUsXHJcbiAgICBJc1N0cmluZ1BpcGUsXHJcbiAgICBJc0FycmF5UGlwZSxcclxuICAgIElzT2JqZWN0UGlwZSxcclxuICAgIElzRGVmaW5lZFBpcGVcclxufSBmcm9tICcuL3R5cGVzLnBpcGUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIElzR3JlYXRlclBpcGUsXHJcbiAgICAgICAgSXNHcmVhdGVyT3JFcXVhbFBpcGUsXHJcbiAgICAgICAgSXNMZXNzUGlwZSxcclxuICAgICAgICBJc0xlc3NPckVxdWFsUGlwZSxcclxuICAgICAgICBJc0VxdWFsUGlwZSxcclxuICAgICAgICBJc05vdEVxdWFsUGlwZSxcclxuICAgICAgICBJc0lkZW50aWNhbFBpcGUsXHJcbiAgICAgICAgSXNOb3RJZGVudGljYWxQaXBlLFxyXG4gICAgICAgIElzTmlsUGlwZSxcclxuICAgICAgICBJc051bGxQaXBlLFxyXG4gICAgICAgIElzVW5kZWZpbmVkUGlwZSxcclxuICAgICAgICBJc0Z1bmN0aW9uUGlwZSxcclxuICAgICAgICBJc051bWJlclBpcGUsXHJcbiAgICAgICAgSXNTdHJpbmdQaXBlLFxyXG4gICAgICAgIElzQXJyYXlQaXBlLFxyXG4gICAgICAgIElzT2JqZWN0UGlwZSxcclxuICAgICAgICBJc0RlZmluZWRQaXBlXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIElzR3JlYXRlclBpcGUsXHJcbiAgICAgICAgSXNHcmVhdGVyT3JFcXVhbFBpcGUsXHJcbiAgICAgICAgSXNMZXNzUGlwZSxcclxuICAgICAgICBJc0xlc3NPckVxdWFsUGlwZSxcclxuICAgICAgICBJc0VxdWFsUGlwZSxcclxuICAgICAgICBJc05vdEVxdWFsUGlwZSxcclxuICAgICAgICBJc0lkZW50aWNhbFBpcGUsXHJcbiAgICAgICAgSXNOb3RJZGVudGljYWxQaXBlLFxyXG4gICAgICAgIElzTmlsUGlwZSxcclxuICAgICAgICBJc051bGxQaXBlLFxyXG4gICAgICAgIElzVW5kZWZpbmVkUGlwZSxcclxuICAgICAgICBJc0Z1bmN0aW9uUGlwZSxcclxuICAgICAgICBJc051bWJlclBpcGUsXHJcbiAgICAgICAgSXNTdHJpbmdQaXBlLFxyXG4gICAgICAgIElzQXJyYXlQaXBlLFxyXG4gICAgICAgIElzT2JqZWN0UGlwZSxcclxuICAgICAgICBJc0RlZmluZWRQaXBlXHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ0Jvb2xlYW5QaXBlc01vZHVsZSB7fVxyXG5cclxuIl19