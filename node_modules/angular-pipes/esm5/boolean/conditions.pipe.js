import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
var IsGreaterPipe = /** @class */ (function () {
    function IsGreaterPipe() {
    }
    IsGreaterPipe.prototype.transform = function (first, second) {
        return first > second;
    };
    IsGreaterPipe = tslib_1.__decorate([
        Pipe({
            name: 'greater'
        })
    ], IsGreaterPipe);
    return IsGreaterPipe;
}());
export { IsGreaterPipe };
var IsGreaterOrEqualPipe = /** @class */ (function () {
    function IsGreaterOrEqualPipe() {
    }
    IsGreaterOrEqualPipe.prototype.transform = function (first, second) {
        return first >= second;
    };
    IsGreaterOrEqualPipe = tslib_1.__decorate([
        Pipe({
            name: 'greaterOrEqual'
        })
    ], IsGreaterOrEqualPipe);
    return IsGreaterOrEqualPipe;
}());
export { IsGreaterOrEqualPipe };
var IsLessPipe = /** @class */ (function () {
    function IsLessPipe() {
    }
    IsLessPipe.prototype.transform = function (first, second) {
        return first < second;
    };
    IsLessPipe = tslib_1.__decorate([
        Pipe({
            name: 'less'
        })
    ], IsLessPipe);
    return IsLessPipe;
}());
export { IsLessPipe };
var IsLessOrEqualPipe = /** @class */ (function () {
    function IsLessOrEqualPipe() {
    }
    IsLessOrEqualPipe.prototype.transform = function (first, second) {
        return first <= second;
    };
    IsLessOrEqualPipe = tslib_1.__decorate([
        Pipe({
            name: 'lessOrEqual'
        })
    ], IsLessOrEqualPipe);
    return IsLessOrEqualPipe;
}());
export { IsLessOrEqualPipe };
var IsEqualPipe = /** @class */ (function () {
    function IsEqualPipe() {
    }
    IsEqualPipe.prototype.transform = function (first, second) {
        return first == second;
    };
    IsEqualPipe = tslib_1.__decorate([
        Pipe({
            name: 'equal'
        })
    ], IsEqualPipe);
    return IsEqualPipe;
}());
export { IsEqualPipe };
var IsNotEqualPipe = /** @class */ (function () {
    function IsNotEqualPipe() {
    }
    IsNotEqualPipe.prototype.transform = function (first, second) {
        return first != second;
    };
    IsNotEqualPipe = tslib_1.__decorate([
        Pipe({
            name: 'notEqual'
        })
    ], IsNotEqualPipe);
    return IsNotEqualPipe;
}());
export { IsNotEqualPipe };
var IsIdenticalPipe = /** @class */ (function () {
    function IsIdenticalPipe() {
    }
    IsIdenticalPipe.prototype.transform = function (first, second) {
        return first === second;
    };
    IsIdenticalPipe = tslib_1.__decorate([
        Pipe({
            name: 'identical'
        })
    ], IsIdenticalPipe);
    return IsIdenticalPipe;
}());
export { IsIdenticalPipe };
var IsNotIdenticalPipe = /** @class */ (function () {
    function IsNotIdenticalPipe() {
    }
    IsNotIdenticalPipe.prototype.transform = function (first, second) {
        return first !== second;
    };
    IsNotIdenticalPipe = tslib_1.__decorate([
        Pipe({
            name: 'notIdentical'
        })
    ], IsNotIdenticalPipe);
    return IsNotIdenticalPipe;
}());
export { IsNotIdenticalPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZGl0aW9ucy5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1waXBlcy8iLCJzb3VyY2VzIjpbImJvb2xlYW4vY29uZGl0aW9ucy5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQU1wRDtJQUFBO0lBTUEsQ0FBQztJQUpDLGlDQUFTLEdBQVQsVUFBVyxLQUFVLEVBQUUsTUFBVztRQUVoQyxPQUFPLEtBQUssR0FBRyxNQUFNLENBQUM7SUFDeEIsQ0FBQztJQUxVLGFBQWE7UUFIekIsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLFNBQVM7U0FDaEIsQ0FBQztPQUNXLGFBQWEsQ0FNekI7SUFBRCxvQkFBQztDQUFBLEFBTkQsSUFNQztTQU5ZLGFBQWE7QUFXMUI7SUFBQTtJQU1BLENBQUM7SUFKQyx3Q0FBUyxHQUFULFVBQVcsS0FBVSxFQUFFLE1BQVc7UUFFaEMsT0FBTyxLQUFLLElBQUksTUFBTSxDQUFDO0lBQ3pCLENBQUM7SUFMVSxvQkFBb0I7UUFIaEMsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLGdCQUFnQjtTQUN2QixDQUFDO09BQ1csb0JBQW9CLENBTWhDO0lBQUQsMkJBQUM7Q0FBQSxBQU5ELElBTUM7U0FOWSxvQkFBb0I7QUFXakM7SUFBQTtJQU1BLENBQUM7SUFKQyw4QkFBUyxHQUFULFVBQVcsS0FBVSxFQUFFLE1BQVc7UUFFaEMsT0FBTyxLQUFLLEdBQUcsTUFBTSxDQUFDO0lBQ3hCLENBQUM7SUFMVSxVQUFVO1FBSHRCLElBQUksQ0FBQztZQUNKLElBQUksRUFBRSxNQUFNO1NBQ2IsQ0FBQztPQUNXLFVBQVUsQ0FNdEI7SUFBRCxpQkFBQztDQUFBLEFBTkQsSUFNQztTQU5ZLFVBQVU7QUFXdkI7SUFBQTtJQU1BLENBQUM7SUFKQyxxQ0FBUyxHQUFULFVBQVcsS0FBVSxFQUFFLE1BQVc7UUFFaEMsT0FBTyxLQUFLLElBQUksTUFBTSxDQUFDO0lBQ3pCLENBQUM7SUFMVSxpQkFBaUI7UUFIN0IsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLGFBQWE7U0FDcEIsQ0FBQztPQUNXLGlCQUFpQixDQU03QjtJQUFELHdCQUFDO0NBQUEsQUFORCxJQU1DO1NBTlksaUJBQWlCO0FBVzlCO0lBQUE7SUFLQSxDQUFDO0lBSEMsK0JBQVMsR0FBVCxVQUFXLEtBQVUsRUFBRSxNQUFXO1FBQ2hDLE9BQU8sS0FBSyxJQUFJLE1BQU0sQ0FBQztJQUN6QixDQUFDO0lBSlUsV0FBVztRQUh2QixJQUFJLENBQUM7WUFDSixJQUFJLEVBQUUsT0FBTztTQUNkLENBQUM7T0FDVyxXQUFXLENBS3ZCO0lBQUQsa0JBQUM7Q0FBQSxBQUxELElBS0M7U0FMWSxXQUFXO0FBVXhCO0lBQUE7SUFNQSxDQUFDO0lBSkMsa0NBQVMsR0FBVCxVQUFXLEtBQVUsRUFBRSxNQUFXO1FBRWhDLE9BQU8sS0FBSyxJQUFJLE1BQU0sQ0FBQztJQUN6QixDQUFDO0lBTFUsY0FBYztRQUgxQixJQUFJLENBQUM7WUFDSixJQUFJLEVBQUUsVUFBVTtTQUNqQixDQUFDO09BQ1csY0FBYyxDQU0xQjtJQUFELHFCQUFDO0NBQUEsQUFORCxJQU1DO1NBTlksY0FBYztBQVczQjtJQUFBO0lBTUEsQ0FBQztJQUpDLG1DQUFTLEdBQVQsVUFBVyxLQUFVLEVBQUUsTUFBVztRQUVoQyxPQUFPLEtBQUssS0FBSyxNQUFNLENBQUM7SUFDMUIsQ0FBQztJQUxVLGVBQWU7UUFIM0IsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLFdBQVc7U0FDbEIsQ0FBQztPQUNXLGVBQWUsQ0FNM0I7SUFBRCxzQkFBQztDQUFBLEFBTkQsSUFNQztTQU5ZLGVBQWU7QUFXNUI7SUFBQTtJQU1BLENBQUM7SUFKQyxzQ0FBUyxHQUFULFVBQVcsS0FBVSxFQUFFLE1BQVc7UUFFaEMsT0FBTyxLQUFLLEtBQUssTUFBTSxDQUFDO0lBQzFCLENBQUM7SUFMVSxrQkFBa0I7UUFIOUIsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLGNBQWM7U0FDckIsQ0FBQztPQUNXLGtCQUFrQixDQU05QjtJQUFELHlCQUFDO0NBQUEsQUFORCxJQU1DO1NBTlksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnZ3JlYXRlcidcclxufSlcclxuZXhwb3J0IGNsYXNzIElzR3JlYXRlclBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKGZpcnN0OiBhbnksIHNlY29uZDogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiBmaXJzdCA+IHNlY29uZDtcclxuICB9XHJcbn1cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnZ3JlYXRlck9yRXF1YWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0dyZWF0ZXJPckVxdWFsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAoZmlyc3Q6IGFueSwgc2Vjb25kOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGZpcnN0ID49IHNlY29uZDtcclxuICB9XHJcbn1cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnbGVzcydcclxufSlcclxuZXhwb3J0IGNsYXNzIElzTGVzc1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKGZpcnN0OiBhbnksIHNlY29uZDogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiBmaXJzdCA8IHNlY29uZDtcclxuICB9XHJcbn1cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnbGVzc09yRXF1YWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0xlc3NPckVxdWFsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAoZmlyc3Q6IGFueSwgc2Vjb25kOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGZpcnN0IDw9IHNlY29uZDtcclxuICB9XHJcbn1cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnZXF1YWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0VxdWFsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAoZmlyc3Q6IGFueSwgc2Vjb25kOiBhbnkpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBmaXJzdCA9PSBzZWNvbmQ7XHJcbiAgfVxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ25vdEVxdWFsJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNOb3RFcXVhbFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKGZpcnN0OiBhbnksIHNlY29uZDogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiBmaXJzdCAhPSBzZWNvbmQ7XHJcbiAgfVxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2lkZW50aWNhbCdcclxufSlcclxuZXhwb3J0IGNsYXNzIElzSWRlbnRpY2FsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAoZmlyc3Q6IGFueSwgc2Vjb25kOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGZpcnN0ID09PSBzZWNvbmQ7XHJcbiAgfVxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ25vdElkZW50aWNhbCdcclxufSlcclxuZXhwb3J0IGNsYXNzIElzTm90SWRlbnRpY2FsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAoZmlyc3Q6IGFueSwgc2Vjb25kOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGZpcnN0ICE9PSBzZWNvbmQ7XHJcbiAgfVxyXG59XHJcblxyXG4iXX0=