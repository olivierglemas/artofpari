import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
import { isNull, isNil, isUndefined, isFunction, isArray, isString, isObject, isNumber } from '../utils/utils';
var IsNullPipe = /** @class */ (function () {
    function IsNullPipe() {
    }
    IsNullPipe.prototype.transform = function (value) {
        return isNull(value);
    };
    IsNullPipe = tslib_1.__decorate([
        Pipe({
            name: 'isNull'
        })
    ], IsNullPipe);
    return IsNullPipe;
}());
export { IsNullPipe };
var IsUndefinedPipe = /** @class */ (function () {
    function IsUndefinedPipe() {
    }
    IsUndefinedPipe.prototype.transform = function (value) {
        return isUndefined(value);
    };
    IsUndefinedPipe = tslib_1.__decorate([
        Pipe({
            name: 'isUndefined'
        })
    ], IsUndefinedPipe);
    return IsUndefinedPipe;
}());
export { IsUndefinedPipe };
var IsNilPipe = /** @class */ (function () {
    function IsNilPipe() {
    }
    IsNilPipe.prototype.transform = function (value) {
        return isNil(value);
    };
    IsNilPipe = tslib_1.__decorate([
        Pipe({
            name: 'isNil'
        })
    ], IsNilPipe);
    return IsNilPipe;
}());
export { IsNilPipe };
var IsFunctionPipe = /** @class */ (function () {
    function IsFunctionPipe() {
    }
    IsFunctionPipe.prototype.transform = function (value) {
        return isFunction(value);
    };
    IsFunctionPipe = tslib_1.__decorate([
        Pipe({
            name: 'isFunction'
        })
    ], IsFunctionPipe);
    return IsFunctionPipe;
}());
export { IsFunctionPipe };
var IsNumberPipe = /** @class */ (function () {
    function IsNumberPipe() {
    }
    IsNumberPipe.prototype.transform = function (value) {
        return isNumber(value);
    };
    IsNumberPipe = tslib_1.__decorate([
        Pipe({
            name: 'isNumber'
        })
    ], IsNumberPipe);
    return IsNumberPipe;
}());
export { IsNumberPipe };
var IsStringPipe = /** @class */ (function () {
    function IsStringPipe() {
    }
    IsStringPipe.prototype.transform = function (value) {
        return isString(value);
    };
    IsStringPipe = tslib_1.__decorate([
        Pipe({
            name: 'isString'
        })
    ], IsStringPipe);
    return IsStringPipe;
}());
export { IsStringPipe };
var IsArrayPipe = /** @class */ (function () {
    function IsArrayPipe() {
    }
    IsArrayPipe.prototype.transform = function (value) {
        return isArray(value);
    };
    IsArrayPipe = tslib_1.__decorate([
        Pipe({
            name: 'isArray'
        })
    ], IsArrayPipe);
    return IsArrayPipe;
}());
export { IsArrayPipe };
var IsObjectPipe = /** @class */ (function () {
    function IsObjectPipe() {
    }
    IsObjectPipe.prototype.transform = function (value) {
        return isObject(value);
    };
    IsObjectPipe = tslib_1.__decorate([
        Pipe({
            name: 'isObject'
        })
    ], IsObjectPipe);
    return IsObjectPipe;
}());
export { IsObjectPipe };
var IsDefinedPipe = /** @class */ (function () {
    function IsDefinedPipe() {
    }
    IsDefinedPipe.prototype.transform = function (value) {
        return !isUndefined(value);
    };
    IsDefinedPipe = tslib_1.__decorate([
        Pipe({
            name: 'isDefined'
        })
    ], IsDefinedPipe);
    return IsDefinedPipe;
}());
export { IsDefinedPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItcGlwZXMvIiwic291cmNlcyI6WyJib29sZWFuL3R5cGVzLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFDTCxNQUFNLEVBQ04sS0FBSyxFQUNMLFdBQVcsRUFDWCxVQUFVLEVBQ1YsT0FBTyxFQUNQLFFBQVEsRUFDUixRQUFRLEVBQ1IsUUFBUSxFQUNULE1BQU0sZ0JBQWdCLENBQUM7QUFLeEI7SUFBQTtJQU1BLENBQUM7SUFKQyw4QkFBUyxHQUFULFVBQVcsS0FBVTtRQUVuQixPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBTFUsVUFBVTtRQUh0QixJQUFJLENBQUM7WUFDSixJQUFJLEVBQUUsUUFBUTtTQUNmLENBQUM7T0FDVyxVQUFVLENBTXRCO0lBQUQsaUJBQUM7Q0FBQSxBQU5ELElBTUM7U0FOWSxVQUFVO0FBV3ZCO0lBQUE7SUFNQSxDQUFDO0lBSkMsbUNBQVMsR0FBVCxVQUFXLEtBQVU7UUFFbkIsT0FBTyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUxVLGVBQWU7UUFIM0IsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLGFBQWE7U0FDcEIsQ0FBQztPQUNXLGVBQWUsQ0FNM0I7SUFBRCxzQkFBQztDQUFBLEFBTkQsSUFNQztTQU5ZLGVBQWU7QUFXNUI7SUFBQTtJQU1BLENBQUM7SUFKQyw2QkFBUyxHQUFULFVBQVcsS0FBVTtRQUVuQixPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBTFUsU0FBUztRQUhyQixJQUFJLENBQUM7WUFDSixJQUFJLEVBQUUsT0FBTztTQUNkLENBQUM7T0FDVyxTQUFTLENBTXJCO0lBQUQsZ0JBQUM7Q0FBQSxBQU5ELElBTUM7U0FOWSxTQUFTO0FBV3RCO0lBQUE7SUFNQSxDQUFDO0lBSkMsa0NBQVMsR0FBVCxVQUFXLEtBQVU7UUFFbkIsT0FBTyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUxVLGNBQWM7UUFIMUIsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLFlBQVk7U0FDbkIsQ0FBQztPQUNXLGNBQWMsQ0FNMUI7SUFBRCxxQkFBQztDQUFBLEFBTkQsSUFNQztTQU5ZLGNBQWM7QUFXM0I7SUFBQTtJQU1BLENBQUM7SUFKQyxnQ0FBUyxHQUFULFVBQVcsS0FBVTtRQUVuQixPQUFPLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBTFUsWUFBWTtRQUh4QixJQUFJLENBQUM7WUFDSixJQUFJLEVBQUUsVUFBVTtTQUNqQixDQUFDO09BQ1csWUFBWSxDQU14QjtJQUFELG1CQUFDO0NBQUEsQUFORCxJQU1DO1NBTlksWUFBWTtBQVd6QjtJQUFBO0lBTUEsQ0FBQztJQUpDLGdDQUFTLEdBQVQsVUFBVyxLQUFVO1FBRW5CLE9BQU8sUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFMVSxZQUFZO1FBSHhCLElBQUksQ0FBQztZQUNKLElBQUksRUFBRSxVQUFVO1NBQ2pCLENBQUM7T0FDVyxZQUFZLENBTXhCO0lBQUQsbUJBQUM7Q0FBQSxBQU5ELElBTUM7U0FOWSxZQUFZO0FBWXpCO0lBQUE7SUFNQSxDQUFDO0lBSkMsK0JBQVMsR0FBVCxVQUFXLEtBQVU7UUFFbkIsT0FBTyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUxVLFdBQVc7UUFIdkIsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLFNBQVM7U0FDaEIsQ0FBQztPQUNXLFdBQVcsQ0FNdkI7SUFBRCxrQkFBQztDQUFBLEFBTkQsSUFNQztTQU5ZLFdBQVc7QUFXeEI7SUFBQTtJQU1BLENBQUM7SUFKQyxnQ0FBUyxHQUFULFVBQVcsS0FBVTtRQUVuQixPQUFPLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBTFUsWUFBWTtRQUh4QixJQUFJLENBQUM7WUFDSixJQUFJLEVBQUUsVUFBVTtTQUNqQixDQUFDO09BQ1csWUFBWSxDQU14QjtJQUFELG1CQUFDO0NBQUEsQUFORCxJQU1DO1NBTlksWUFBWTtBQVl6QjtJQUFBO0lBTUEsQ0FBQztJQUpDLGlDQUFTLEdBQVQsVUFBVyxLQUFVO1FBRW5CLE9BQU8sQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUxVLGFBQWE7UUFIekIsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLFdBQVc7U0FDbEIsQ0FBQztPQUNXLGFBQWEsQ0FNekI7SUFBRCxvQkFBQztDQUFBLEFBTkQsSUFNQztTQU5ZLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1xyXG4gIGlzTnVsbCxcclxuICBpc05pbCxcclxuICBpc1VuZGVmaW5lZCwgXHJcbiAgaXNGdW5jdGlvbixcclxuICBpc0FycmF5LFxyXG4gIGlzU3RyaW5nLFxyXG4gIGlzT2JqZWN0LFxyXG4gIGlzTnVtYmVyIFxyXG59IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNOdWxsJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNOdWxsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAodmFsdWU6IGFueSk6IGJvb2xlYW4ge1xyXG4gICAgXHJcbiAgICByZXR1cm4gaXNOdWxsKHZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNVbmRlZmluZWQnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc1VuZGVmaW5lZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKHZhbHVlOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGlzVW5kZWZpbmVkKHZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNOaWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc05pbFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKHZhbHVlOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGlzTmlsKHZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNGdW5jdGlvbidcclxufSlcclxuZXhwb3J0IGNsYXNzIElzRnVuY3Rpb25QaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgXHJcbiAgdHJhbnNmb3JtICh2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiBpc0Z1bmN0aW9uKHZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNOdW1iZXInXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc051bWJlclBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKHZhbHVlOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGlzTnVtYmVyKHZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNTdHJpbmcnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc1N0cmluZ1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKHZhbHVlOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGlzU3RyaW5nKHZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2lzQXJyYXknXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0FycmF5UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAodmFsdWU6IGFueSk6IGJvb2xlYW4ge1xyXG4gICAgXHJcbiAgICByZXR1cm4gaXNBcnJheSh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2lzT2JqZWN0J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNPYmplY3RQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgXHJcbiAgdHJhbnNmb3JtICh2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiBpc09iamVjdCh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICdpc0RlZmluZWQnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0RlZmluZWRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgXHJcbiAgdHJhbnNmb3JtICh2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiAhaXNVbmRlZmluZWQodmFsdWUpO1xyXG4gIH1cclxufVxyXG5cclxuIl19